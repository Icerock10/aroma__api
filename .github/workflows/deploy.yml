name: Deploy to AWS

on:
  push:
    branches: [ "main" ]
  merge_group:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm ci
      - name: Lint app
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to AWS
        run: |
            run docker build -t aroma-api .
            run aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}
            run docker tag aroma-api:latest ${{ secrets.AWS_ECR_URL }}:latest
            run docker push ${{ secrets.AWS_ECR_URL }}:latest
            run aws ecs update-service --cluster ${{ secrets.AWS_CLUSTER_NAME }} --service ${{ secrets.AWS_SERVICE_NAME }} --force-new-deployment --region ${{ secrets.AWS_REGION }}
            
